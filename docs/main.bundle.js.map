{"version":3,"sources":["D:/Angular/services-start/src/$_lazy_route_resource lazy","D:/Angular/services-start/src/app/Services/accounts.service.ts","D:/Angular/services-start/src/app/Services/logging.service.ts","D:/Angular/services-start/src/app/account/account.component.css","D:/Angular/services-start/src/app/account/account.component.html","D:/Angular/services-start/src/app/account/account.component.ts","D:/Angular/services-start/src/app/app.component.css","D:/Angular/services-start/src/app/app.component.html","D:/Angular/services-start/src/app/app.component.ts","D:/Angular/services-start/src/app/app.module.ts","D:/Angular/services-start/src/app/new-account/new-account.component.css","D:/Angular/services-start/src/app/new-account/new-account.component.html","D:/Angular/services-start/src/app/new-account/new-account.component.ts","D:/Angular/services-start/src/environments/environment.ts","D:/Angular/services-start/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular/services-start/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\r\nimport { LoggingService } from './logging.service';\r\n\r\n@Injectable()\r\nexport class AccountsService {\r\n  accounts = [\r\n    {\r\n      name: 'Master Account',\r\n      status: 'active'\r\n    },\r\n    {\r\n      name: 'Testaccount',\r\n      status: 'inactive'\r\n    },\r\n    {\r\n      name: 'Hidden Account',\r\n      status: 'unknown'\r\n    }\r\n  ];\r\n  constructor(private logginService: LoggingService){}\r\n\r\n  addAccount(name: string, status: string){\r\n    this.accounts.push({name: name, status: status});\r\n    this.logginService.logStatusChange(status);\r\n  }\r\n\r\n  updateStatus(id: number, status: string){\r\n    this.accounts[id].status = status;\r\n    this.logginService.logStatusChange(status);\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular/services-start/src/app/Services/accounts.service.ts","export class LoggingService {\r\n    logStatusChange(status: string){\r\n      console.log('A server status changed, new status: ' + status);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular/services-start/src/app/Services/logging.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".row {\\n  border: 1px solid #ccc;\\n  margin: 10px 0;\\n  padding: 10px 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular/services-start/src/app/account/account.component.css\n// module id = ../../../../../src/app/account/account.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12 col-md-8 col-md-offset-2\\\">\\n    <h5>{{ account.name }}</h5>\\n    <hr>\\n    <p>This account is {{ account.status }}</p>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSetTo('active')\\\">Set to 'active'</button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSetTo('inactive')\\\">Set to 'inactive'</button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"onSetTo('unknown')\\\">Set to 'unknown'</button>\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular/services-start/src/app/account/account.component.html\n// module id = ../../../../../src/app/account/account.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\nimport {LoggingService } from '../Services/logging.service';\nimport { AccountsService } from '../Services/accounts.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css'],\n  //providers: [ LoggingService ]\n})\nexport class AccountComponent {\n  @Input() account: {name: string, status: string};\n  @Input() id: number;\n\n  constructor(\n    private loggingService: LoggingService,\n    private accountsService: AccountsService\n  ){  }\n\n  onSetTo(status: string) {\n    this.accountsService.updateStatus(this.id, status);\n    //this.loggingService.logStatusChange(status);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular/services-start/src/app/account/account.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  margin-top: 30px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular/services-start/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-md-8 col-md-offset-2\\\">\\n      <app-new-account (accountAdded)=\\\"onAccountAdded($event)\\\"></app-new-account>\\n      <hr>\\n      <app-account\\n        *ngFor=\\\"let acc of accounts; let i = index\\\"\\n        [account]=\\\"acc\\\"\\n        [id]=\\\"i\\\"\\n        (statusChanged)=\\\"onStatusChanged($event)\\\"></app-account>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular/services-start/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AccountsService } from './Services/accounts.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  //providers: [ AccountsService ]\n})\nexport class AppComponent implements OnInit {\n  accounts: { name: string, status: string }[] = [];\n\n  constructor(private accountsService: AccountsService) {}\n\n  ngOnInit() {\n    this.accounts = this.accountsService.accounts;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular/services-start/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { AccountComponent } from './account/account.component';\nimport { NewAccountComponent } from './new-account/new-account.component';\n\nimport { AccountsService } from './Services/accounts.service';\nimport { LoggingService } from './Services/logging.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountComponent,\n    NewAccountComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [AccountsService, LoggingService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular/services-start/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular/services-start/src/app/new-account/new-account.component.css\n// module id = ../../../../../src/app/new-account/new-account.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12 col-md-8 col-md-offset-2\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Account Name</label>\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        #accountName>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <select class=\\\"form-control\\\" #status>\\n        <option value=\\\"active\\\">Active</option>\\n        <option value=\\\"inactive\\\">Inactive</option>\\n        <option value=\\\"hidden\\\">Hidden</option>\\n      </select>\\n    </div>\\n    <button\\n      class=\\\"btn btn-primary\\\"\\n      (click)=\\\"onCreateAccount(accountName.value, status.value)\\\">\\n      Add Account\\n    </button>\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular/services-start/src/app/new-account/new-account.component.html\n// module id = ../../../../../src/app/new-account/new-account.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { LoggingService } from '../Services/logging.service';\nimport { AccountsService } from '../Services/accounts.service';\n\n@Component({\n  selector: 'app-new-account',\n  templateUrl: './new-account.component.html',\n  styleUrls: ['./new-account.component.css']\n  //providers: [ LoggingService ]\n})\n\nexport class NewAccountComponent {\n\n  constructor(\n    private loggingService: LoggingService,\n    private accountsService: AccountsService\n  ){  }\n\n  onCreateAccount(accountName: string, accountStatus: string) {\n    this.accountsService.addAccount(accountName, accountStatus);\n    //this.loggingService.logStatusChange(accountStatus);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular/services-start/src/app/new-account/new-account.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular/services-start/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular/services-start/src/main.ts"],"sourceRoot":"webpack:///"}